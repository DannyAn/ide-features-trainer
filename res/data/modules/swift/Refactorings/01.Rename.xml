<xml type="Scenario" name="Rename" id="swift.refactorings.rename" subtype="aimless" projectTree="hide" lang="Swift">
    <CopyText><![CDATA[import UIKit

class Rename: UIViewController {

    override func viewDidLoad() {
        super.viewDidLoad()

        let x = 0
        let y = 50

        let tableView = UITableView()

        let header = UILabel()
        header.text = "AppCode"
        header.sizeToFit()

        tableView.frame = CGRect(x: x, y: y, width: 320, height: 400)
        tableView.tableHeaderView = header
        self.view.addSubview(tableView)
    }
}]]></CopyText>
    <Text>You can rename anything by placing the caret on a symbol and using the Rename refactoring.</Text>
    <Try triggers="GotoFile;MasterViewController.swift">Navigate to the <code>MasterViewController.swift</code> using <action>GotoFile</action></Try>
    <MoveCaret position="6:10"/>
    <Try triggers="RenameElement;NextTemplateVariable">Let's start from something simple - rename the <code>objects</code> field to <code>array</code>. Press <action>RenameElement</action>, enter new name and press <action>EditorEnter</action></Try>
    <MoveCaret position="5:39"/>
    <Try triggers="RenameElement;NextTemplateVariable">Now repeat the same actions and rename <code>DetailViewController</code> type to any new name.</Try>
    <Try triggers="FindUsages">Press <action>FindUsages</action>. As you see, the rename works globally, even renaming occurrences in .xib and .storyboard files.</Try>
    <Win/>
</xml>