<xml type="Scenario" name="Create from Usage" id="swift.codegeneration.createfromusage" subtype="aimless" projectTree="hide" lang="Swift">
    <CopyText><![CDATA[import UIKit

class CreateFromUsage: UIViewController {

    override func viewDidLoad() {
        super.viewDidLoad()
        self.view.addSubview(label)
        setup(view:label)
    }

    func createClassFromUsage() {
        var ide = IDE()

        var anotherIDE = IDE(helps:true)
    }
}]]></CopyText>
    <MoveCaret position="7:30"/>
    <Try triggers="ShowIntentionActions;EditorChooseLookupItem">In <ide/> you can create various code constructs from their usages just by pressing <action>ShowIntentionActions</action> on the unresolved entity. Press <action>ShowIntentionActions</action>, select <strong>Create local variable 'label'</strong> and press <action>EditorEnter</action></Try>
    <TypeText> = UILabel()</TypeText>
    <Try trigger="GotoNextError">Now jump to the next unresolved entity using <action>GotoNextError</action></Try>
    <Try triggers="ShowIntentionActions;NextTemplateVariable">Repeat the same actions to create the <code>setup</code> function.</Try>
    <Try trigger="GotoNextError">Nice! Notice how parameters together with their names are generated. Press <action>GotoNextError</action> again.</Try>
    <Try triggers="ShowIntentionActions;EditorChooseLookupItem">This time we can use the same approach to create a class declaration. Press <action>ShowIntentionActions</action> and select <strong>Create type 'IDE'</strong>. Note that you can automatically create it also nested in the current class or in a new file.</Try>
    <Try triggers="GotoNextError;ShowIntentionActions;NextTemplateVariable">Great, let's repeat the same actions to generate an initializer for our <code>IDE</code> class. Press <action>GotoNextError</action> → <action>ShowIntentionActions</action> → <action>EditorEnter</action> → <action>EditorEnter</action> combo!</Try>
    <Try trigger="GotoNextError">Press <action>GotoNextError</action> to jump to the last problem in the file</Try>
    <Try triggers="ShowIntentionActions">And finally let's add just an empty initializer using the same actions</Try>
    <Win/>
</xml>