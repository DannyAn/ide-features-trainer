<xml type="Scenario" name="Smart Type Completion" id="Completions.SmartTypeCompletion" subtype="aimless" projectTree="hide" lang="JAVA">
    <MouseBlock>
        <CopyText><![CDATA[import java.lang.String;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.Queue;
import java.util.concurrent.ArrayBlockingQueue;

class SmartCompletionDemo{

    private Queue<String> strings;
    private ArrayBlockingQueue<String> arrayBlockingQueue;

    public SmartCompletionDemo(LinkedList<String> linkedList, HashSet<String> hashSet) {
        strings =
        arrayBlockingQueue = new ArrayBlockingQueue<String>(hashSet.size());
        for (String s : hashSet)
            arrayBlockingQueue.add(s);
    }

    private String[] toArray() {
        return
    }

}]]></CopyText>
<CaretBlock>
    <MoveCaret position="13:19"/>
    <TypeText> </TypeText>
    <Try triggers="SmartTypeCompletion;EditorChooseLookupItem">Smart Type Completion filters the list of suggestion to include only those types that are applicable in the current context. Press <action>SmartTypeCompletion</action> to see the list of matching suggestions. Choose the first one by pressing <action>EditorEnter</action>.</Try>
    <MoveCaret position="20:16"/>
    <TypeText> </TypeText>
    <Try triggers="SmartTypeCompletion;SmartTypeCompletion;EditorChooseLookupItem">Smart Type Completion can also suggest code for a return statement. Press <action>SmartTypeCompletion</action> twice to see the Lookup menu for a return. Choose the first one by pressing <action>EditorEnter</action>.</Try>
    <Win/>
</CaretBlock>
</MouseBlock>
</xml>